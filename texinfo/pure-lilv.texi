\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename pure-lilv.info
@documentencoding UTF-8
@ifinfo
@*Generated by Sphinx 1.1.3.@*
@end ifinfo
@settitle pure-lilv
@defindex ge
@paragraphindent 2
@exampleindent 4
@afourlatex
@dircategory Pure Language and Library Documentation
@direntry
* pure-lilv: (pure-lilv.info). pure-lilv
@end direntry

@c %**end of header

@copying
@quotation
Pure 0.59, February 21, 2014

Albert Gr채f (Editor)

Copyright @copyright{} 2009-2014, Albert Gr채f et al
@end quotation

@end copying

@titlepage
@title pure-lilv
@insertcopying
@end titlepage
@contents

@c %** start of user preamble

@c %** end of user preamble

@ifnottex
@node Top
@top pure-lilv
@insertcopying
@end ifnottex

@c %**start of body
@anchor{pure-lilv doc}@anchor{1}
@geindex lilv (module)

Version 0.1, February 21, 2014

Albert Gr채f <@email{aggraef@@gmail.com}>

This package provides a Pure module for David Robillard's Lilv@footnote{http://drobilla.net/software/lilv/}, a library for
LV2 plugin host writers. LV2@footnote{http://lv2plug.in/} is the new Linux audio plugin standard (LADSPA
successor) which aims to be portable and extensible. Lilv makes it possible to
load LV2 plugins in audio and other multimedia software. It is provided as a
comprehensive and well-tested reference implementation for LV2 plugin hosts,
so that authors of multimedia software don't have to craft their own (and
often incomplete or bug-ridden) implementations of the LV2 plugin API.

This module is still under development. When it is finished, it should provide
all the common facilities needed to write LV2 hosts in Pure. We already offer
operations to retrieve information about the LV2 plugins installed on a
system, and to instantiate and run most basic plugins. Basic MIDI support is
also available. More work is still needed in order to support more exotic
event types such as transport state and tempo changes, handling of presets and
plugin state, and any other extensions which may be required to run more
advanced plugins. We're still trying to figure these out, so if you notice
anything that's missing in the current implementation then please submit a
feature request.

Documentation still needs to be written. For the time being, please refer to
the lilv.pure script for a description of the programming interface, and to
the scripts in the examples folder for examples showing how to use the
operations provided by this module.

@menu
* Copying:: 
* Module Index:: 
* Index:: 

@end menu

@node Copying,Module Index,Top,Top
@anchor{pure-lilv module-lilv}@anchor{0}@anchor{pure-lilv pure-lilv-pure-lilv-interface}@anchor{2}@anchor{pure-lilv copying}@anchor{3}
@chapter Copying


pure-lilv is Copyright (c) 2014 by Albert Gr채f. It is distributed under a
3-clause BSD license, please check the COPYING file included in the
distribution for details.

@node Module Index,Index,Copying,Top
@unnumbered Module Index


@menu
* lilv: 0. 
@end menu


@node Index,,Module Index,Top
@unnumbered Index


@printindex ge

@c %**end of body
@bye
