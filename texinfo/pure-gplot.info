This is pure-gplot.info, produced by makeinfo version 6.5 from
pure-gplot.texi.

     Pure 0.68, October 07, 2018

     Albert Gräf (Editor)

     Copyright © 2009-2018, Albert Gräf et al

INFO-DIR-SECTION Pure Language and Library Documentation
START-INFO-DIR-ENTRY
* pure-gplot: (pure-gplot.info). Gnuplot bindings
END-INFO-DIR-ENTRY


   Generated by Sphinx 1.1.3.


File: pure-gplot.info,  Node: Top,  Next: Copying,  Up: (dir)

pure-gplot
**********

     Pure 0.68, October 07, 2018

     Albert Gräf (Editor)

     Copyright © 2009-2018, Albert Gräf et al

  Kay-Uwe Kirstein

* Menu:

* Copying::
* Introduction::
* Function Reference::
* Index::


File: pure-gplot.info,  Node: Copying,  Next: Introduction,  Prev: Top,  Up: Top

1 Copying
*********

Copyright (c) 2009, 2010 by Kay-Uwe Kirstein.

  pure-gplot is free software: you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or (at
your option) any later version.


File: pure-gplot.info,  Node: Introduction,  Next: Function Reference,  Prev: Copying,  Up: Top

2 Introduction
**************

This module contains a pure binding to gnuplot.  Communication to
gnuplot is performed via pipes.  The usual work flow to generate plot
via gnuplot is the following:

  1. open pipe via ‘open’

  2. send plot commands, e.g., with ‘plot’

  3. close pipe with ‘close’


File: pure-gplot.info,  Node: Function Reference,  Next: Index,  Prev: Introduction,  Up: Top

3 Function Reference
********************

* Menu:

* Open / Closing Functions::
* Low-Level Commands::
* Plot Commands::
* Plot Options::
* Private Functions::


File: pure-gplot.info,  Node: Open / Closing Functions,  Next: Low-Level Commands,  Up: Function Reference

3.1 Open / Closing Functions
============================

     ‘gplot::open cmd;’

  opens a pipe to gnuplot, using _cmd_.  _cmd_ usually is something like
‘gnuplot’ or ‘/path/to/gnuplot/bin/gnuplot’ depending on your path
configuration.  ‘open’ returns a pointer to the actual pipe for later
usage, so a typical call to open might look like this:

     ‘let gp = gplot::open "/path_to_gnuplot/gnuplot";’

  gplot::GPLOT_EXE is a predefined variable with the standard Gnuplot
executable.  It is set to ‘pgnuplot’ on Windows and to ‘gnuplot’
otherwise and can be overridden bythe GPLOT_EXE environment variable.
(‘pgnuplot.exe’ is a special executable for Windows, which is capable of
stdin pipes in contrast to the normal ‘gnuplot.exe’).  Usage of
‘gplot::GPLOT_EXE’ might look like this:

     ‘let gp = gplot::open gplot::GPLOT_EXE;’

     ‘gplot::close gp;’

  closes a gnuplot session, given by the handle _gp_.


File: pure-gplot.info,  Node: Low-Level Commands,  Next: Plot Commands,  Prev: Open / Closing Functions,  Up: Function Reference

3.2 Low-Level Commands
======================

     ‘gplot::puts_no_echo string gp;’

  sends the string to the gnuplot session _gp_ points to.  As the name
states, there is no echo read back from gnuplot (Don’t know whether
_gnuplot_ or _pgnuplot.exe_ supports reading/bidirectional pipes at
all).

     ‘gplot::puts string gp;’

  is a convenience wrapper to ‘gplot::puts_no_echo’.


File: pure-gplot.info,  Node: Plot Commands,  Next: Plot Options,  Prev: Low-Level Commands,  Up: Function Reference

3.3 Plot Commands
=================

The main (versatile) function to generate plots is the simple plot
command, which expects a list of the data to be plotted.

     ‘gplot::plot gp data opt;’

  where _gp_ is the pointer to the gnuplot session, _data_ is a list
containing the data to be plotted and _opt_ is a tuple, containing
options for the plot.  _opt_ might be empty () or ‘DEFAULT’ for default
options (refer to gnuplot for them).

  If data for the x-axis (ordinate) should be explicitely given _plotxy_
should be used instead:

     ‘gplot::plotxy_deprecated gp (xdata, ydata) opt;’

     ‘gplot::plotxy gp (xdata, ydata) opt [];’

  Multiple datasets can be plotted into a single graph by combining them
to tuples of lists:

     ‘gplot::plotxy gp (xdata, y1data, y2data, ..) opt;’

     ‘gplot::plotxy gp (xdata, y1data, y2data, ..) opt [];’

     ‘gplot::plotxy gp (xdata, y1data, y2data, ..) opt titles;’

  where the latter form gives additional titles for each y-data set.


File: pure-gplot.info,  Node: Plot Options,  Next: Private Functions,  Prev: Plot Commands,  Up: Function Reference

3.4 Plot Options
================

     ‘gplot::xtics gp list_of_tic_labels;’

  Sets the tic labels of the x-axis to the given text labels.  The
labels can be given aas a simple list of strings, which are taken as
successive labels or as a list of tuples with the form ‘(value, label)’,
in which case each label is placed at its ‘value’ position.

     ‘gplot::xtics gp ()’ or ‘gplot::xtics gp "default";’

  This restores the default tics on the y-axis.

     ‘gplot::title t;’

  Sets a title string on top of the plot (default location)

     ‘gplot::output gp terminal name;’

  Sets the terminal and output name for the successive plots.  For some
terminal additional options might be given:

     ‘gplot::output gp (terminal, options) name’.

  For terminals like x11 or windows, name can be empty ‘()’.

     ‘gplot::xlabel gp name’ or ‘gplot::ylabel gp name’

  Adds labels to the x- or y-axis, respectively.  An empty name removes
the label for successive plots, e.g., ‘gplot::xlabel gp ""’.


File: pure-gplot.info,  Node: Private Functions,  Prev: Plot Options,  Up: Function Reference

3.5 Private Functions
=====================

     ‘gpdata data’, ‘gpxydata (xdata, y1data, ..)’

  Internal functions to handle lists of data point (‘gpdata’) or tuples
of lists of data points (‘gpxydata’) and convert them to be understood
by Gnuplot.

     ‘gpxycmd’, ‘gpxycmdtitle’

  Internal function to generate the plotting command for multiple
datasets.  ‘gpxycmdtitle’ adds titles to each dataset, a.k.a plot
legend.

  ‘gplot::gpopt ("style", style, args);’

  Internal function to convert a plot style to the respective gnuplot
syntax

     ‘gplot::gptitle t;’

  Internal function to generate title information for individual
datasets


File: pure-gplot.info,  Node: Index,  Prev: Function Reference,  Up: Top

Index
*****



Tag Table:
Node: Top372
Ref: pure-gplot doc571
Ref: 0571
Node: Copying663
Ref: pure-gplot gnuplot-bindings747
Ref: 1747
Ref: pure-gplot copying747
Ref: 2747
Node: Introduction1063
Ref: pure-gplot introduction1162
Ref: 31162
Node: Function Reference1473
Ref: pure-gplot function-reference1570
Ref: 41570
Node: Open / Closing Functions1732
Ref: pure-gplot open-closing-functions1842
Ref: 51842
Node: Low-Level Commands2808
Ref: pure-gplot low-level-commands2940
Ref: 62940
Node: Plot Commands3339
Ref: pure-gplot plot-commands3459
Ref: 73459
Node: Plot Options4478
Ref: pure-gplot plot-options4597
Ref: 84597
Node: Private Functions5648
Ref: pure-gplot private-functions5745
Ref: 95745
Node: Index6428

End Tag Table


Local Variables:
coding: utf-8
End:
