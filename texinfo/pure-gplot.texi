\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename pure-gplot.info
@documentencoding UTF-8
@ifinfo
@*Generated by Sphinx 1.1.3.@*
@end ifinfo
@settitle pure-gplot
@defindex ge
@paragraphindent 2
@exampleindent 4
@afourlatex
@dircategory Pure Language and Library Documentation
@direntry
* pure-gplot: (pure-gplot.info). Gnuplot bindings
@end direntry

@c %**end of header

@copying
@quotation
Pure 0.64, November 06, 2014

Albert Gräf (Editor)

Copyright @copyright{} 2009-2014, Albert Gräf et al
@end quotation

@end copying

@titlepage
@title pure-gplot
@insertcopying
@end titlepage
@contents

@c %** start of user preamble

@c %** end of user preamble

@ifnottex
@node Top
@top pure-gplot
@insertcopying
@end ifnottex

@c %**start of body
@anchor{pure-gplot doc}@anchor{0}

Kay-Uwe Kirstein

@menu
* Copying:: 
* Introduction:: 
* Function Reference:: 
* Index:: 

@end menu

@node Copying,Introduction,Top,Top
@anchor{pure-gplot gnuplot-bindings}@anchor{1}@anchor{pure-gplot copying}@anchor{2}
@chapter Copying


Copyright (c) 2009, 2010 by Kay-Uwe Kirstein.

pure-gplot is free software: you can redistribute it and/or modify it under
the terms of the GNU Lesser General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your option) any
later version.


@node Introduction,Function Reference,Copying,Top
@anchor{pure-gplot introduction}@anchor{3}
@chapter Introduction


This module contains a pure binding to gnuplot. Communication to gnuplot is
performed via pipes.
The usual work flow to generate plot via gnuplot is the following:


@enumerate 

@item 
open pipe via @code{open}

@item 
send plot commands, e.g., with @code{plot}

@item 
close pipe with @code{close}
@end enumerate


@node Function Reference,Index,Introduction,Top
@anchor{pure-gplot function-reference}@anchor{4}
@chapter Function Reference



@menu
* Open / Closing Functions:: 
* Low-Level Commands:: 
* Plot Commands:: 
* Plot Options:: 
* Private Functions:: 

@end menu

@node Open / Closing Functions,Low-Level Commands,,Function Reference
@anchor{pure-gplot open-closing-functions}@anchor{5}
@section Open / Closing Functions


@quotation

@code{gplot::open cmd;}
@end quotation

opens a pipe to gnuplot, using @emph{cmd}. @emph{cmd} usually is something like @code{gnuplot} or @code{/path/to/gnuplot/bin/gnuplot} depending on your path configuration.
@code{open} returns a pointer to the actual pipe for later usage, so a typical call to open might look like this:

@quotation

@code{let gp = gplot::open "/path_to_gnuplot/gnuplot";}
@end quotation

gplot::GPLOT_EXE is a predefined variable with the standard Gnuplot executable.
It is set to @code{pgnuplot} on Windows and to @code{gnuplot} otherwise and can be overridden bythe GPLOT_EXE environment variable. (@code{pgnuplot.exe} is a special executable for Windows, which is capable of stdin pipes in contrast to the normal @code{gnuplot.exe}).
Usage of @code{gplot::GPLOT_EXE} might look like this:

@quotation

@code{let gp = gplot::open gplot::GPLOT_EXE;}

@code{gplot::close gp;}
@end quotation

closes a gnuplot session, given by the handle @emph{gp}.


@node Low-Level Commands,Plot Commands,Open / Closing Functions,Function Reference
@anchor{pure-gplot low-level-commands}@anchor{6}
@section Low-Level Commands


@quotation

@code{gplot::puts_no_echo string gp;}
@end quotation

sends the string to the gnuplot session @emph{gp} points to. As the name states, there is no echo read back from gnuplot (Don't know whether @emph{gnuplot} or @emph{pgnuplot.exe} supports reading/bidirectional pipes at all).

@quotation

@code{gplot::puts string gp;}
@end quotation

is a convenience wrapper to @code{gplot::puts_no_echo}.


@node Plot Commands,Plot Options,Low-Level Commands,Function Reference
@anchor{pure-gplot plot-commands}@anchor{7}
@section Plot Commands


The main (versatile) function to generate plots is the simple plot command, which expects a list of the data to be plotted.

@quotation

@code{gplot::plot gp data opt;}
@end quotation

where @emph{gp} is the pointer to the gnuplot session, @emph{data} is a list containing the data to be plotted and @emph{opt} is a tuple, containing options for the plot. @emph{opt} might be empty () or @code{DEFAULT} for default options (refer to gnuplot for them).


If data for the x-axis (ordinate) should be explicitely given @emph{plotxy} should be used instead:

@quotation

@code{gplot::plotxy_deprecated gp (xdata, ydata) opt;}

@code{gplot::plotxy gp (xdata, ydata) opt [];}
@end quotation


Multiple datasets can be plotted into a single graph by combining them to tuples of lists:

@quotation

@code{gplot::plotxy gp (xdata, y1data, y2data, ..) opt;}

@code{gplot::plotxy gp (xdata, y1data, y2data, ..) opt [];}

@code{gplot::plotxy gp (xdata, y1data, y2data, ..) opt titles;}
@end quotation

where the latter form gives additional titles for each y-data set.


@node Plot Options,Private Functions,Plot Commands,Function Reference
@anchor{pure-gplot plot-options}@anchor{8}
@section Plot Options


@quotation

@code{gplot::xtics gp list_of_tic_labels;}
@end quotation

Sets the tic labels of the x-axis to the given text labels.
The labels can be given aas a simple list of strings, which are taken as successive labels or as a list of tuples with the form @code{(value, label)}, in which case each label is placed at its @code{value} position.

@quotation

@code{gplot::xtics gp ()} or @code{gplot::xtics gp "default";}
@end quotation

This restores the default tics on the y-axis.


@quotation

@code{gplot::title t;}
@end quotation

Sets a title string on top of the plot (default location)


@quotation

@code{gplot::output gp terminal name;}
@end quotation

Sets the terminal and output name for the successive plots. For some terminal additional options might be given:

@quotation

@code{gplot::output gp (terminal, options) name}.
@end quotation

For terminals like x11 or windows, name can be empty @code{()}.


@quotation

@code{gplot::xlabel gp name} or @code{gplot::ylabel gp name}
@end quotation

Adds labels to the x- or y-axis, respectively. An empty name removes the label for successive plots, e.g., @code{gplot::xlabel gp ""}.


@node Private Functions,,Plot Options,Function Reference
@anchor{pure-gplot private-functions}@anchor{9}
@section Private Functions


@quotation

@code{gpdata data}, @code{gpxydata (xdata, y1data, ..)}
@end quotation

Internal functions to handle lists of data point (@code{gpdata}) or tuples of lists of data points (@code{gpxydata}) and convert them to be understood by Gnuplot.


@quotation

@code{gpxycmd}, @code{gpxycmdtitle}
@end quotation

Internal function to generate the plotting command for multiple datasets. @code{gpxycmdtitle} adds titles to each dataset, a.k.a plot legend.


@code{gplot::gpopt ("style", style, args);}

Internal function to convert a plot style to the respective gnuplot syntax


@quotation

@code{gplot::gptitle t;}
@end quotation

Internal function to generate title information for individual datasets

@node Index,,Function Reference,Top
@unnumbered Index


@printindex ge

@c %**end of body
@bye
